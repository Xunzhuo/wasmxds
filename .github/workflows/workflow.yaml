name: build-test
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  unittests:
    name: unittests
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: set up go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: download dependencies
        run: go mod download

      - name: run tests without credentials
        run: make gotest
        if: github.ref != 'refs/heads/main'

      - name: run tests with credentials
        run: make gotest GO_BUILD_TAGS=ci_aws_test
        if: github.ref == 'refs/heads/main'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  e2e-test-controllers:
    name: e2e test / controllers
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup kind cluster
        uses: engineerd/setup-kind@v0.5.0

      - name: run
        run: make e2e.controllers

  build-wasm-binary:
    name: build wasm binary
    runs-on: ubuntu-latest
    container:
      image: tinygo/tinygo:0.16.0
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install
        run: apt-get update && apt-get install -y -qq build-essential

      - name: build e2e test binary
        run: make build.wasm

      - name: upload wasm-binary
        uses: actions/upload-artifact@v2
        with:
          name: wasm-binary
          path: e2e/providers/testdata

  e2e-test-providers:
    name: e2e test / providers
    needs: [build-wasm-binary]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: download built wasm binary
        uses: actions/download-artifact@v2
        with:
          name: wasm-binary
          path: e2e/providers/testdata

      - name: setup kind cluster
        uses: engineerd/setup-kind@v0.5.0

      - name: set up go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: run without credentials
        if: github.ref != 'refs/heads/main'
        run: make e2e.providers

      - name: run with credentials
        if: github.ref == 'refs/heads/main'
        run: make e2e.providers GO_BUILD_TAGS=ci_aws_test
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  docker-build-push:
    name: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: set up go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: build binary
        run: make build

      - name: build
        run: docker build . -t getenvoy/wasmxds:${{ github.sha }}

      - uses: azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: push
        run: docker push getenvoy/wasmxds:${{ github.sha }}

  e2e-test-k8s:
    name: e2e test / k8s
    needs: [docker-build-push]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup kind cluster
        uses: engineerd/setup-kind@v0.5.0

      - name: run
        run: make e2e.k8s
        env:
          WASMXDS_IMAGE: getenvoy/wasmxds:${{ github.sha }}
